Publish/subscribe topics and guaranteed delivery queues
=======================================================

What it can do
--------------

.. image:: /gfx/pubsub/intro.png

Publish/subscribe simplifies integration of distributed and diverse applications, including cloud-based, on premise, mobile
and IoT ones.

Integrated environments can be created using an event-based approach of publishers sending
messages to topics out of which they are delivered to independent subscribers. This promotes the
architecture that can dynamically adapt to business and technical changes - application can come and go freely without
influencing each other.

While in transit, data is kept in message queues that ensure integrity and availabity of the system. Should a subscribing
application go down, messages are safely retained until the recipient is ready to read them again.

Publishers and subscribers may use different communication protocols or data formats. Each subscriber may choose its own
preferred delivery order and method.

Users have a GUI to manage all the configuration, including ability to browse message queues and update their contents in place.

Publish/subscribe provides topics, queues, routing, security, APIs and administration facilities - applications
publish and consume messages using REST, SOAP, WebSockets or Zato services. It is also possible to listen for
filesystem events and publish files to topics.

Topics
------

  * **Introduction:**
    :doc:`~~Tutorial <./intro/tutorial/01>` |
    :doc:`~~Architecture <./arch/index>`

  * **Endpoints:**
    :doc:`~~Overview <./topic/endpoint/index>` |
    :doc:`~~Publishers <./topic/endpoint/publisher>` |
    :doc:`~~Subscribers <./topic/endpoint/subscriber>`

  * **APIs:**
    :doc:`~~Overview <./api/index>` |
    :doc:`~~REST <./api/rest>` |
    :doc:`~~SOAP <./api/soap>` |
    :doc:`~~WebSockets <./api/wsx>` |
    :doc:`~~Zato services <./api/zato-service>` |
    :doc:`~~Flat files <./api/file>`

  * **Configuration and maintenance:**
    :doc:`~~Endpoints <./admin/config/endpoint>` |
    :doc:`~~Topics <./admin/config/topic>` |
    :doc:`~~Subscriptions <./admin/config/subscription>` |
    :doc:`~~Logging <./admin/logging>`

  * **Security:**
    :doc:`~~Attack surface <./sec/attack-surface>` |
    :doc:`~~Defaults <./sec/defaults>`
