zato.security.jwt.log-out
=========================

Overview
--------

Logs a user out of an existing JWT token.

* List response: Yes
* SOAP action: zato.security.jwt.log-out
* SOAP URL path: /zato/soap
* JSON URL path: /zato/json/zato.security.jwt.log-out
* WSDL: :download:`Click here</public-api/zato.wsdl>`

Request parameters
------------------

========== ========= ======== ==================================
Name       Datatype  Optional Notes
========== ========= ======== ==================================
token      string    ---      JWT token
========== ========= ======== ==================================


Response parameters
-------------------

========= ======== ======== ================================
Name      Datatype Optional Notes
========= ======== ======== ================================
result    string   Yes      
========= ======== ======== ================================

SOAP example
------------

.. code-block:: xml

    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
         xmlns:zato="https://zato.io/ns/20130518">
       <soapenv:Body>
          <zato:zato_security_jwt_log_out_request>
             <zato:token></zato:token>
          </zato:zato_security_jwt_log_out_request>
       </soapenv:Body>
    </soapenv:Envelope>

    <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns="https://zato.io/ns/20130518">
    <soap:Body>
        <zato_security_jwt_log_out_response xmlns="https://zato.io/ns/20130518">
        <zato_env>
            <cid>K133254644916609060549153420473795731425</cid>
            <result>ZATO_OK</result>
        </zato_env>
        </zato_security_jwt_log_out_response>
    </soap:Body>
    </soap:Envelope>


JSON example
------------

.. code-block:: javascript

   {
    "token": ""
   }

  {
    "zato_env": {
      "details": "",
      "result": "ZATO_OK",
      "cid": "K133254644916609060549153420473795731425"
    },
    "zato_security_jwt_log_out_response": {
      "result": ""
    }
  }
