Subscriptions
=============

Preliminary materials: :doc:`Pub/sub architecture <../../arch/index>`.

Overview
--------

A subscription needs to be created before an endpoint can consume messages from a given topic.
Depending on particular needs, subscriptions can and may be created either manually using web-admin or through API calls.

Stemming from their specific connection requirements, subscriptions for WebSockets endpoints cannot be created in web-admin
in advance by administrators.


Creating subscriptions
----------------------

In web-admin, go to *Pub/sub* → *Subscriptions* → *Create new pub/sub subscriptions*.

.. image:: /gfx/pubsub/details/create-sub.png

All subscriptions are grouped by an endpoint's type. Choosing one of types re-populates the form with elements specific to this
kind of endpoints.

Each subscription has a delivery server - this is one of servers in the Zato cluster that will queue up in-RAM all messages
destined for a particular endpoint. It will be also the server that will send outgoing pub/sub messages to the endpoint.

For each endpoint type, one of endpoints need to be selected. Doing it will add to the form all the topics that the chosen
endpoint is allowed to subscribe to.

Updating subscriptions
----------------------

Deleting subscriptions
----------------------

Browsing subscription queues
----------------------------

WebSockets
----------

WebSockets-based endpoints :doc:`subscribe to topics using the public API <>` - this is because there is no way
to predict to which server a given WebSocket connection will be routed from the cluster's load-balancer which in turn means that
it is impossible to choose any particular delivery server in the web-admin.

File transfer
-------------

Subscriptions for file transfer are regular subscriptions to topics, just like with any other publisher. For instance,
if an endpoint wishes to subscribe to new invoices from topic */invoices/new*, an administrator may create such a subscription
in web-admin and file transfer messages, once :doc:`configured <>`, will be delivered to that topic as they
arrive in the filesystem, and out of the topic they will be sent to the endpoint's queue.
